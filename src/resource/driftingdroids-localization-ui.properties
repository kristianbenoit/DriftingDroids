tab.PrepareBoard.text = prepare game

tab.OriginalBoard.text = original board
tab.OriginalBoard.tooltip = use Ricochet Robots board tiles

lbl.BoardTiles.text = arrange the 4 board tiles

btn.RandomLayout.text = random layout
btn.RandomLayout.tooltip = place the board tiles at random positions
btn.RandomLayout.acceleratorkey = A

tab.FreestyleBoard.text = custom board
tab.FreestyleBoard.tooltip = build the board from scratch and place all walls and goals

btn.RemoveWalls.text = delete walls
btn.RemoveWalls.tooltip = remove all walls from board

btn.RemoveGoals.text = delete goals
btn.RemoveGoals.tooltip = remove all goals from board

lbl.Width.text = width (columns)
lbl.Height.text = height (rows)

lbl.ListGoalColors.text = choose goal color
lbl.ListGoalShapes.text = choose goal shape

lbl.NumberOfRobots.text = number of robots

btn.CopyBoardDumpToClipboard.text = save
btn.CopyBoardDumpToClipboard.tooltip = copy board as text to clipboard
btn.CopyBoardDumpToClipboard.acceleratorkey = S

msg.CopyBoardDumpToClipboard.OK.title = save board - success
msg.CopyBoardDumpToClipboard.OK.message = The board state has been copied as text to the clipboard.
msg.CopyBoardDumpToClipboard.Error.title = save board - error
msg.CopyBoardDumpToClipboard.Error.message = Unable to copy the board state to clipboard.

btn.CreateBoardFromDump.text = load ...
btn.CreateBoardFromDump.tooltip = create a new board from text that you will paste into the input box
btn.CreateBoardFromDump.acceleratorkey = L

msg.CreateBoardFromDump.input.title = load board - input data
msg.CreateBoardFromDump.input.message = Please paste the text representation of a DriftingDroids game here:
msg.CreateBoardFromDump.Error.title = load board - error
msg.CreateBoardFromDump.Error.message = Unable to create the board from this text.

lbl.RotateBoard.text = rotate board

btn.RotateBoardLeft.tooltip = rotate left (counterclockwise)
btn.RotateBoardLeft.acceleratorkey = Z

btn.RotateBoardRight.tooltip = rotate right (clockwise)
btn.RotateBoardRight.acceleratorkey = X



tab.Options.text = options

lbl.SolverOptions.text = solver options

lbl.PreferSolutionWith.text = prefer solution with
lbl.NumberOfRobotsMoved.text = number of robots in motion

chk.AllowReboundMoves.text = allow rebound moves

lbl.GUIOptions.text = interface options

chk.ShowColorNames.text = show color names (robots and goals)

chk.ShowOnlyActiveGoal.text = show only the currently active goal

chk.ShowSolutions.text = show computed solutions immediately



tab.PlayGame.text = play game

lbl.SetStartingPosition.text = start another round

btn.RandomRobots.text = random robots
btn.RandomRobots.tooltip = place the robots randomly on the board
btn.RandomRobots.acceleratorkey = R

btn.RandomGoal.text = random goal
btn.RandomGoal.tooltip = select a goal at random
btn.RandomGoal.acceleratorkey = G

cmb.PlaceRobot.text = place robot
cmb.PlaceRobot.tooltip = first select a robot color here and then click on the new board position
cmb.PlaceRobot.1.acceleratorkey = 1
cmb.PlaceRobot.2.acceleratorkey = 2
cmb.PlaceRobot.3.acceleratorkey = 3
cmb.PlaceRobot.4.acceleratorkey = 4
cmb.PlaceRobot.5.acceleratorkey = 5

btn.SelectGoal.text = select goal
btn.SelectGoal.tooltip = first click here and then select a goal on the board
btn.SelectGoal.acceleratorkey = 9

lbl.GameID.text = game ID

lbl.ShowComputedSolutions.text = show computed solutions

cmb.SelectSolution.text = select solution
cmb.SelectSolution.tooltip = SPOILER WARNING! reveals hints about the solutions

btn.Hint.text = hint
btn.Hint.tooltip = click four times to get more detailed hints
btn.Hint.acceleratorkey = H

btn.NoMoves.tooltip = undo all moves
btn.NoMoves.acceleratorkey = V

btn.PrevMove.tooltip = undo last move
btn.PrevMove.acceleratorkey = B

btn.NextMove.tooltip = show next move
btn.NextMove.acceleratorkey = N

btn.AllMoves.tooltip = show all moves
btn.AllMoves.acceleratorkey = M

txt.Options.text = options:
txt.Yes.text = yes
txt.No.text = no

txt.Place.text = place
txt.Robot.text = robot
txt.Select.text = select
txt.Goal.text = goal
txt.ComputingSolutions.text = computing solutions...
txt.NoSolutionFound.text = no solution found!
txt.SelectSolution.text = select solution
txt.Rebound.text = rebound


# compound messages, see http://docs.oracle.com/javase/tutorial/i18n/format/messageintro.html

# message: found 1 solution(s) in 3 second(s).
# args: {0}=Integer(solutions), {1}=Integer(seconds)
msg.FoundSolutions.pattern = found {0,number,integer} {0,choice,1#solution|1<solutions} in {1,number,integer} {1,choice,1#second|1<seconds}.

# message: hint: solution contains 5 moves.
# args: {0}=Integer(moves)
msg.Hint.1.pattern = hint: solution contains {0,number,integer} {0,choice,1#move|1<moves}.

# message: hint: 5 moves, 2 robots moved.
# args: {0}=Integer(moves), {1}=Integer(robots)
msg.Hint.2.pattern = hint: {0,number,integer} {0,choice,1#move|1<moves}, {1,number,integer} {1,choice,1#robot|1<robots} moved.

# message: hint: 5 moves, 2 robots gy.
# args: {0}=Integer(moves), {1}=Integer(robots)
# robot names (here "gy") are _not_ part of the pattern!
msg.Hint.3.pattern = hint: {0,number,integer} {0,choice,1#move|1<moves}, {1,number,integer} {1,choice,1#robot|1<robots}

# message: hint: 5 moves, robots gy, last move yE.
# args: {0}=Integer(moves), {1}=Integer(robots)
# robot names (here "gy") and last move (here "yE") are _not_ part of the pattern!
msg.Hint.4.pattern = hint: {0,number,integer} {0,choice,1#move|1<moves}, {1,choice,1#robot|1<robots}
msg.Hint.4.LastMove.text = , last move

# message: error: invalid game ID "..."
# args: {0}=String
msg.ErrorGameID.pattern = error: invalid game ID \"{0}\"

