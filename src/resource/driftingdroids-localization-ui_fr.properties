tab.PrepareBoard.text = plateau de jeu

tab.OriginalBoard.text = plateau d'origine
tab.OriginalBoard.tooltip = utiliser les plateaux de Ricochet Robots

lbl.BoardTiles.text = disposition des 4 plaques

btn.RandomLayout.text = disposition al\u00e9atoire
btn.RandomLayout.tooltip = disposer les plaques al\u00e9atoirement
btn.RandomLayout.acceleratorkey = A

tab.FreestyleBoard.text = plateau personnalis\u00e9
tab.FreestyleBoard.tooltip = partir d'un plateau vide et choisir la disposition des murs et des cibles

btn.RemoveWalls.text = supprimer les murs
btn.RemoveWalls.tooltip = supprimer tous les murs du plateau

btn.RemoveGoals.text = supprimer les cibles
btn.RemoveGoals.tooltip = supprimer toutes les cibles du plateau

lbl.Width.text = largeur (colonnes)
lbl.Height.text = hauteur (lignes)

lbl.ListGoalColors.text = choisir la couleur de la cible
lbl.ListGoalShapes.text = choisir la forme de la cible

lbl.NumberOfRobots.text = nombre de robots

btn.CopyBoardDumpToClipboard.text = enregistrer
btn.CopyBoardDumpToClipboard.tooltip = copier le plateau dans le presse-papier sous forme de texte
btn.CopyBoardDumpToClipboard.acceleratorkey = S

msg.CopyBoardDumpToClipboard.OK.title = enregistrer le plateau - succ\u00e8s
msg.CopyBoardDumpToClipboard.OK.message = Le plateau a \u00e9t\u00e9 copi\u00e9 dans le presse-papier sous forme de texte.
msg.CopyBoardDumpToClipboard.Error.title = enregistrer le plateau - erreur
msg.CopyBoardDumpToClipboard.Error.message = Impossible de copier le plateau dans le presse-papier.

btn.CreateBoardFromDump.text = charger...
btn.CreateBoardFromDump.tooltip = cr\u00e9er un nouveau plateau \u00e0 partir du texte
btn.CreateBoardFromDump.acceleratorkey = L

msg.CreateBoardFromDump.input.title = charger le plateau
msg.CreateBoardFromDump.input.message = Entrer le texte repr\u00e9sentant un plateau de jeu :
msg.CreateBoardFromDump.Error.title = charger le plateau - erreur
msg.CreateBoardFromDump.Error.message = Impossible de cr\u00e9er le plateau \u00e0 partir de ce texte.

lbl.RotateBoard.text = rotation du plateau

btn.RotateBoardLeft.tooltip = pivoter le plateau de 90 degr\u00e9s dans le sens antihoraire
btn.RotateBoardLeft.acceleratorkey = Z

btn.RotateBoardRight.tooltip = pivoter le plateau de 90 degr\u00e9s dans le sens horaire
btn.RotateBoardRight.acceleratorkey = X



tab.Options.text = options

lbl.SolverOptions.text = options du r\u00e9solveur

lbl.PreferSolutionWith.text = pr\u00e9f\u00e9rer la solution avec le
lbl.NumberOfRobotsMoved.text = nombre de robots en mouvement

chk.AllowReboundMoves.text = autoriser les retours en arri\u00e8re

lbl.GUIOptions.text = options de l'interface

chk.ShowColorNames.text = afficher l'initiale de la couleur sur les robots et les cibles

chk.ShowOnlyActiveGoal.text = afficher uniquement la cible active

chk.ShowSolutions.text = afficher imm\u00e9diatement les solutions calcul\u00e9es



tab.PlayGame.text = jouer

lbl.SetStartingPosition.text = commencer une nouvelle partie

btn.RandomRobots.text = robots al\u00e9atoires
btn.RandomRobots.tooltip = disposer les robots al\u00e9atoirement sur le plateau
btn.RandomRobots.acceleratorkey = R

btn.RandomGoal.text = cible al\u00e9atoire
btn.RandomGoal.tooltip = choisir une cible al\u00e9atoirement
btn.RandomGoal.acceleratorkey = G

cmb.PlaceRobot.text = d\u00e9placer un robot
cmb.PlaceRobot.tooltip = s\u00e9lectionner la couleur du robot \u00e0 d\u00e9placer puis cliquer sur la case de destination
cmb.PlaceRobot.1.acceleratorkey = 1
cmb.PlaceRobot.2.acceleratorkey = 2
cmb.PlaceRobot.3.acceleratorkey = 3
cmb.PlaceRobot.4.acceleratorkey = 4
cmb.PlaceRobot.5.acceleratorkey = 5

btn.SelectGoal.text = choisir la cible
btn.SelectGoal.tooltip = cliquer d'abord ici puis choisir une cible sur le plateau
btn.SelectGoal.acceleratorkey = 9

lbl.GameID.text = ID de la partie

lbl.ShowComputedSolutions.text = afficher les solutions calcul\u00e9es

cmb.SelectSolution.text = s\u00e9lectionner une solution
cmb.SelectSolution.tooltip = ATTENTION SPOILER ! affiche des informations sur les solutions

btn.Hint.text = indice
btn.Hint.tooltip = cliquer plusieurs fois pour obtenir des indices plus d\u00e9taill\u00e9s
btn.Hint.acceleratorkey = H

btn.NoMoves.tooltip = annuler tous les mouvements
btn.NoMoves.acceleratorkey = V

btn.PrevMove.tooltip = annuler le dernier mouvement
btn.PrevMove.acceleratorkey = B

btn.NextMove.tooltip = afficher le prochain mouvement
btn.NextMove.acceleratorkey = N

btn.AllMoves.tooltip = afficher tous les mouvements
btn.AllMoves.acceleratorkey = M

txt.Options.text = options :
txt.Yes.text = oui
txt.No.text = non

txt.Place.text = disposer
txt.Robot.text = robot
txt.Select.text = s\u00e9lectionner
txt.Goal.text = cible
txt.ComputingSolutions.text = calcul des solutions...
txt.NoSolutionFound.text = aucune solution trouv\u00e9e !
txt.SelectSolution.text = s\u00e9lectionner la solution
txt.Rebound.text = rebond


# compound messages, see http://docs.oracle.com/javase/tutorial/i18n/format/messageintro.html

# message: found 1 solution(s) in 3 second(s).
# args: {0}=Integer(solutions), {1}=Integer(seconds)
msg.FoundSolutions.pattern = {0,number,integer} {0,choice,1#solution trouv\u00e9e|1<solutions trouv\u00e9es} en {1,number,integer} {1,choice,1#seconde|1<secondes}.

# message: hint: solution contains 5 moves.
# args: {0}=Integer(moves)
msg.Hint.1.pattern = indice : la solution comporte {0,number,integer} {0,choice,1#mouvement|1<mouvements}.

# message: hint: 5 moves, 2 robots moved.
# args: {0}=Integer(moves), {1}=Integer(robots)
msg.Hint.2.pattern = indice : {0,number,integer} {0,choice,1#mouvement|1<mouvements}, {1,number,integer} {1,choice,1#robot d\u00e9plac\u00e9|1<robots d\u00e9plac\u00e9s}.

# message: hint: 5 moves, 2 robots gy.
# args: {0}=Integer(moves), {1}=Integer(robots)
# robot names (here "gy") are _not_ part of the pattern!
msg.Hint.3.pattern = indice : {0,number,integer} {0,choice,1#mouvement|1<mouvements}, {1,number,integer} {1,choice,1#robot|1<robots}

# message: hint: 5 moves, robots gy, last move yE.
# args: {0}=Integer(moves), {1}=Integer(robots)
# robot names (here "gy") and last move (here "yE") are _not_ part of the pattern!
msg.Hint.4.pattern = indice : {0,number,integer} {0,choice,1#mouvement|1<mouvements}, {1,choice,1#robot|1<robots}
msg.Hint.4.LastMove.text = , dernier mouvement

# message: error: invalid game ID "..."
# args: {0}=String
msg.ErrorGameID.pattern = erreur : ID de partie invalide \"{0}\"

